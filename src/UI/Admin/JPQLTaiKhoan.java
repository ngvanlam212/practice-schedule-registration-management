/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/GUIForms/JPanel.java to edit this template
 */
package UI.Admin;

import Dao.TaiKhoanDAO;
import FileHandle.FileHandleImp;
import Model.TaiKhoanModel;
import Test.test;
import java.awt.Font;
import java.text.ParseException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.logging.Level;
import java.util.logging.Logger;
import javax.swing.JOptionPane;
import javax.swing.RowFilter;
import javax.swing.event.DocumentEvent;
import javax.swing.event.DocumentListener;
import javax.swing.table.TableModel;
import javax.swing.table.TableRowSorter;

/**
 *
 * @author lamng
 */
public class JPQLTaiKhoan extends javax.swing.JPanel {
    private ArrayList<TaiKhoanModel> listTK;
    private FileHandleImp fileHandle;
    
    //De goi cac ham cua panel qltaikhoan khi can
    public static JPQLTaiKhoan jpQLTaiKhoan;
    public JPQLTaiKhoan() {
        jpQLTaiKhoan = this;
        fileHandle = new FileHandleImp();
        listTK = fileHandle.getDSTaiKhoan();
        initComponents();
        loadTable();
    }

    public ArrayList<TaiKhoanModel> getListTK() {
        return listTK;
    }

    public void loadTable() {
        tblTaiKhoan.setModel(new TaiKhoanDAO(listTK));
        //Để sắp xếp bảng
        TableRowSorter<TableModel> rowSorter = new TableRowSorter<>(tblTaiKhoan.getModel());
        tblTaiKhoan.setRowSorter(rowSorter);
        txtSearch.getDocument().addDocumentListener(new DocumentListener() {
            //Mỗi khi thêm kí tự
            @Override
            public void insertUpdate(DocumentEvent e) {
                String text = txtSearch.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                }else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            //Mỗi khi xóa kí tự
            @Override
            public void removeUpdate(DocumentEvent e) {
                String text = txtSearch.getText();
                if (text.trim().length() == 0) {
                    rowSorter.setRowFilter(null);
                }else {
                    rowSorter.setRowFilter(RowFilter.regexFilter("(?i)" + text));
                }
            }

            @Override
            public void changedUpdate(DocumentEvent e) {
            }
        });
        //Set header
        tblTaiKhoan.getTableHeader().setFont(new Font("Segoe UI", Font.BOLD, 14));
    }
    
    //Lấy id cuối cùng
    public int getLastId() {
        if (!listTK.isEmpty()) {
            int lastId = listTK.get(0).getMaGV();
            for (int i = 1; i < listTK.size(); i++) {
                if (listTK.get(i).getMaGV() > lastId) {
                    lastId = listTK.get(i).getMaGV();
                } 
            }
            return lastId;
        }
        return 0;
    }
    
    //Kiểm tra tồn tại username
    public boolean isExistUsername(String username) {
        for (TaiKhoanModel tk : listTK) {
            if(tk.getUsername().compareTo(username) == 0) {
                return true;
            }
        }
        return false;
    }
    
    public void ghiDSTaiKhoan() {
        fileHandle.ghiDSTaiKhoan(listTK);
    }
    
    public void themTaiKhoan(TaiKhoanModel tk) {
        listTK.add(tk);
        ghiDSTaiKhoan();
    }
    
    public void suaTaiKhoan(TaiKhoanModel tk, int index) {
        listTK.set(index, tk);
        ghiDSTaiKhoan();
    }
    
    public void xoaTaiKhoan(int index) {
        listTK.remove(index);
        ghiDSTaiKhoan();
    }
    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    @SuppressWarnings("unchecked")
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jPanel1 = new javax.swing.JPanel();
        jLabel2 = new javax.swing.JLabel();
        jSeparator1 = new javax.swing.JSeparator();
        jPanel2 = new javax.swing.JPanel();
        btnThem = new javax.swing.JButton();
        txtSearch = new javax.swing.JTextField();
        btnXoa = new javax.swing.JButton();
        btnSua = new javax.swing.JButton();
        jScrollPane1 = new javax.swing.JScrollPane();
        tblTaiKhoan = new javax.swing.JTable();
        jLabel1 = new javax.swing.JLabel();

        setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jPanel1.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        jLabel2.setFont(new java.awt.Font("Segoe UI", 1, 18)); // NOI18N
        jLabel2.setText("Quản lý tài khoản");
        jPanel1.add(jLabel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 10, 240, -1));

        add(jPanel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 0, 820, 40));
        add(jSeparator1, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 940, -1));

        jPanel2.setName(""); // NOI18N
        jPanel2.setLayout(new org.netbeans.lib.awtextra.AbsoluteLayout());

        btnThem.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnThem.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/add.png"))); // NOI18N
        btnThem.setText("Thêm");
        btnThem.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnThem.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnThemActionPerformed(evt);
            }
        });
        jPanel2.add(btnThem, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 120, 100, 60));
        jPanel2.add(txtSearch, new org.netbeans.lib.awtextra.AbsoluteConstraints(90, 40, 190, 30));

        btnXoa.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnXoa.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/delete.png"))); // NOI18N
        btnXoa.setText("Xóa");
        btnXoa.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnXoa.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnXoaActionPerformed(evt);
            }
        });
        jPanel2.add(btnXoa, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 290, 100, 60));

        btnSua.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        btnSua.setIcon(new javax.swing.ImageIcon(getClass().getResource("/Images/edit.png"))); // NOI18N
        btnSua.setText("Sửa");
        btnSua.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        btnSua.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                btnSuaActionPerformed(evt);
            }
        });
        jPanel2.add(btnSua, new org.netbeans.lib.awtextra.AbsoluteConstraints(770, 200, 100, 60));

        tblTaiKhoan.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        tblTaiKhoan.setModel(new javax.swing.table.DefaultTableModel(
            new Object [][] {
                {},
                {},
                {},
                {}
            },
            new String [] {

            }
        ));
        tblTaiKhoan.setCursor(new java.awt.Cursor(java.awt.Cursor.HAND_CURSOR));
        tblTaiKhoan.setRowHeight(24);
        jScrollPane1.setViewportView(tblTaiKhoan);
        tblTaiKhoan.getAccessibleContext().setAccessibleName("");

        jPanel2.add(jScrollPane1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 90, 710, 320));

        jLabel1.setFont(new java.awt.Font("Segoe UI", 0, 14)); // NOI18N
        jLabel1.setText("Tìm kiếm");
        jPanel2.add(jLabel1, new org.netbeans.lib.awtextra.AbsoluteConstraints(20, 40, -1, 30));

        add(jPanel2, new org.netbeans.lib.awtextra.AbsoluteConstraints(0, 40, 938, 480));
    }// </editor-fold>//GEN-END:initComponents

    private void btnThemActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnThemActionPerformed
        
        DLThemTaiKhoan addTK = new DLThemTaiKhoan(test.jfmainAdmin, true);
        addTK.setTitle("Thêm tài khoản giáo viên mới");
        addTK.setVisible(true);
    }//GEN-LAST:event_btnThemActionPerformed

    private void btnSuaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnSuaActionPerformed
        //Lấy thông tin tài khoản đã chọn và mở form sửa khi nhấn nút sửa
        SimpleDateFormat fm = new SimpleDateFormat("dd/MM/yyyy");
        int selectedRowIndex = tblTaiKhoan.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn tài khoản nào !");
        } else {
            TaiKhoanModel tk = new TaiKhoanModel();
            tk.setMaGV((int)tblTaiKhoan.getValueAt(selectedRowIndex, 1));
            tk.setUsername(tblTaiKhoan.getValueAt(selectedRowIndex, 2).toString());
            tk.setPassword(tblTaiKhoan.getValueAt(selectedRowIndex, 3).toString());
            tk.setHoTen(tblTaiKhoan.getValueAt(selectedRowIndex, 4).toString());
            try {
                tk.setNgaySinh(fm.parse(tblTaiKhoan.getValueAt(selectedRowIndex, 5).toString()));
            } catch (ParseException ex) {
                Logger.getLogger(JPQLTaiKhoan.class.getName()).log(Level.SEVERE, null, ex);
            }
            tk.setDiaChi(tblTaiKhoan.getValueAt(selectedRowIndex, 6).toString());
            tk.setEmail(tblTaiKhoan.getValueAt(selectedRowIndex, 7).toString());
            String quyen = tblTaiKhoan.getValueAt(selectedRowIndex, 9).toString();
            if (quyen.equals("Admin")) {
                tk.setQuyen(1);
            } else {
                tk.setQuyen(0);
            }
            try {
                tk.setSDT(tblTaiKhoan.getValueAt(selectedRowIndex, 8).toString());
                //Truyền tk từ lựa chọn trên bảng vào form sửa
                DLSuaTaiKhoan suaTaiKhoan = new DLSuaTaiKhoan(test.jfmainAdmin, true, tk, listTK.indexOf(tk));
                suaTaiKhoan.setTitle("Sửa tài khoản giáo viên");
                suaTaiKhoan.setVisible(true);
            } catch(Exception e) {
                
            }
                    
        }
        
    }//GEN-LAST:event_btnSuaActionPerformed

    private void btnXoaActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_btnXoaActionPerformed
        // TODO add your handling code here:
        int selectedRowIndex = tblTaiKhoan.getSelectedRow();
        if (selectedRowIndex < 0) {
            JOptionPane.showMessageDialog(null, "Bạn chưa chọn tài khoản nào !");
        } else {
            String username = tblTaiKhoan.getValueAt(selectedRowIndex, 2).toString();
            String password = tblTaiKhoan.getValueAt(selectedRowIndex, 3).toString();
            TaiKhoanModel tkXoa = new TaiKhoanModel(username, password);
            
            //Hiển thị xác nhận xóa
            int qs;
            qs = JOptionPane.showConfirmDialog(null, "Xóa tài khoản: " + username, "Xóa tài khoản", JOptionPane.YES_NO_OPTION);
            if (qs == JOptionPane.YES_OPTION){
                xoaTaiKhoan(listTK.indexOf(tkXoa));
                loadTable();
            }
        }
    }//GEN-LAST:event_btnXoaActionPerformed


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JButton btnSua;
    private javax.swing.JButton btnThem;
    private javax.swing.JButton btnXoa;
    private javax.swing.JLabel jLabel1;
    private javax.swing.JLabel jLabel2;
    private javax.swing.JPanel jPanel1;
    private javax.swing.JPanel jPanel2;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JSeparator jSeparator1;
    private javax.swing.JTable tblTaiKhoan;
    private javax.swing.JTextField txtSearch;
    // End of variables declaration//GEN-END:variables
}
